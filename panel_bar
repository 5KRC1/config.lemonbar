#! /bin/sh

if [[ $1 ]];
then
	. $HOME/.config/lemonbar/themes/$1
else
	. $HOME/.config/lemonbar/themes/default
fi

. $HOME/.config/lemonbar/panel_config

num_mon=$(bspc query -M | wc -l)

while read -r line ; do
		case $line in
			S*)
				# conky output
				IFS=';' read -ra my_array <<< "$line"
				for i in "${my_array[@]}"
				do
					case $i in
						S*)
							clock="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${i#?} %{B-}%{F-}"
							;;
						P*)
							cpu="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG}%{A:lxtask &:}$I_CPU ${i#?}%{A} %{B-}%{F-}"
							;;
						R*)
							ram="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG}%{A:lxtask &:}$I_RAM ${i#?}%{A} %{B-}%{F-}"
							;;
					esac
				done
				conky="${clock}${cpu}${ram}"
				;;
			T*)
				# xtitle output
				if [[ ${#line} -lt 50 ]];
				then
					title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line#?} %{B-}%{F-}"
				else
					line=${line#?}
					title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line:0:50}... %{B-}%{F-}"
				fi
				;;
			W*)
				if [[ $(echo $line | cut -d" " -f1) == "WM_NORMAL_HINTS" ]];
				then
					# trayer
					offset=$(echo $line | cut -d" " -f2)
				else
					# bspwm's state
					wm=
					IFS=':'
					set -- ${line#?}
					while [ $# -gt 0 ] ; do
						item=$1
						name=${item#?}
						case $item in
							[mM]*)
								case $item in
									m*)
										# monitor
										FG=$COLOR_MONITOR_FG
										BG=$COLOR_MONITOR_BG
										on_focused_monitor=
										;;
									M*)
										# focused monitor
										FG=$COLOR_FOCUSED_MONITOR_FG
										BG=$COLOR_FOCUSED_MONITOR_BG
										on_focused_monitor=1
										;;
								esac
								[ $num_mon -lt 2 ] && shift && continue
								wm="${wm}%{F${FG}}%{B${BG}}%{A:bspc monitor -f ${name}:} ${name} %{A}%{B-}%{F-}"
								;;
							[fFoOuU]*)
								case $item in
									f*)
										# free desktop
										FG=$COLOR_FREE_FG
										BG=$COLOR_FREE_BG
										UL=$BG
										;;
									F*)
										if [ "$on_focused_monitor" ] ; then
											# focused free desktop
											FG=$COLOR_FOCUSED_FREE_FG
											BG=$COLOR_FOCUSED_FREE_BG
											UL=$BG
										else
											# active free desktop
											FG=$COLOR_FREE_FG
											BG=$COLOR_FREE_BG
											UL=$COLOR_FOCUSED_FREE_BG
										fi
										;;
									o*)
										# occupied desktop
										FG=$COLOR_OCCUPIED_FG
										BG=$COLOR_OCCUPIED_BG
										UL=$BG
										;;
									O*)
										if [ "$on_focused_monitor" ] ; then
											# focused occupied desktop
											FG=$COLOR_FOCUSED_OCCUPIED_FG
											BG=$COLOR_FOCUSED_OCCUPIED_BG
											UL=$BG
										else
											# active occupied desktop
											FG=$COLOR_OCCUPIED_FG
											BG=$COLOR_OCCUPIED_BG
											UL=$COLOR_FOCUSED_OCCUPIED_BG
										fi
										;;
									u*)
										# urgent desktop
										FG=$COLOR_URGENT_FG
										BG=$COLOR_URGENT_BG
										UL=$BG
										;;
									U*)
										if [ "$on_focused_monitor" ] ; then
											# focused urgent desktop
											FG=$COLOR_FOCUSED_URGENT_FG
											BG=$COLOR_FOCUSED_URGENT_BG
											UL=$BG
										else
											# active urgent desktop
											FG=$COLOR_URGENT_FG
											BG=$COLOR_URGENT_BG
											UL=$COLOR_FOCUSED_URGENT_BG
										fi
										;;
								esac
								wm="${wm}%{F${FG}}%{B${BG}}%{U${UL}}%{+u}%{A:bspc desktop -f ${name}:} ${name} %{A}%{B-}%{F-}%{-u}"
								;;
							[LTG]*)
								# layout, state and flags
								wm="${wm}%{F$COLOR_STATE_FG}%{B$COLOR_STATE_BG} ${name} %{B-}%{F-}"
								;;
						esac
						shift
					done
				fi
				;;
			B*)
				# battery output
				bat="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
				;;
			V*)
				# volume output
				vol="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
				;;
			N*)
				# network output
				net="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
				;;
			D*)
				# notification output
				notif="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
				;;
			C*)
				# bluetooth output
				bt="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
				;;
		esac
	# printf "%s\n" "%{Sf}%{l}${wm}%{c}${title}%{r}${sys}${cpu}${vol}${bat}${net}${notif}"
	echo -e "%{Sf}%{l}${wm}%{c}${title}%{r}${conky}${vol}${bat}${bt}${net}${notif}%{O$(($offset))}"
	
done
